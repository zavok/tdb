#!/bin/env -S rc

tmp=/tmp/$pid

dbt=tags
dbf=sha

# Util functions:

fn echo2 {
	echo $* >[1=2]
}

fn _exit {
	rm -rf $tmp
	exit $"*
}

fn _sha {
	sha1sum $1 | sed 's/  .*//'
}

fn usage {
	echo2 'usage: tdb cmd [args]'
	echo2 'commands:'
	echo2 ' - get tags...'
	echo2 ' - tag file tags...'
	echo2 ' - untag file tags...'
	echo2 ' - hash file...'
	_exit usage
}

# Commands:

fn get {
	count=$#*

	if (test $count -lt 1) {
		echo2 get: not enough arguments
		usage
	}

	for (tag in $*) {echo '^'^$tag^'	.*'} > $tmp/tags

	grep -f $tmp/tags $dbt      \
		| uniq -c -1        \
		| grep '^ *'^$count \
		| sed 's/.*	//' \
		> $tmp/sha

	if (test -s $tmp/sha) {
		grep -f $tmp/sha $dbf \
			| sed 's/[0-9a-z]*  //'
	}
	if not {
		echo2 No files.
		_exit get: no files
	}
}

fn tag {
	if (test $#* -lt 2) {
		usage
	}

	file=$1
	shift

	if (! test -f $file) {
		echo2 file $file not found
		_exit
	}

	sha=`{_sha $file}
	tags=$*
	for (tag in $tags) {
		line=$tag^'	'^$sha
		if(! grep $"line $dbt > /dev/null) echo $line >> $dbt
	}
}

fn untag {
	if (test $#* -lt 2) {
		usage
	}

	file=$1
	shift

	if (! test -f $file) {
		echo2 file $file not found
		_exit
	}

	sha=`{_sha $file}
	tags=$*
	cp $dbt $tmp/db
	for (tag in $tags) {
		line='/'^$tag^'	'^$sha^'/d'
		sed -e $"line $tmp/db > $tmp/db.untag
		mv $tmp/db.untag $tmp/db
	}
	cp $tmp/db $dbt
}

fn hash {
	if (test $#* -lt 1) {
		echo2 hash: not enough arguments
		usage
	}

	files=$*
	dirs=()
	while (test $#files -gt 0) {
		for (file in $files) {
			if (test -d $"file) dirs=($dirs $"file)
			if (test -f $"file) sha1sum $"file
		}
		dir=$dirs(1)
		dirs=$dirs(2-)
		if (test -d $"dir) files=$"dir/*
		if not files=()
	}
}

# Main:

if (! test $"*) {
	specify command
	usage
}

if (! test -f $"dbt){
	msg=$"dbt': tags db does not exist!'
	echo2 $msg
	_exit $msg
}

if (! test -f $"dbf){
	msg=$"dbf': sha db does not exist!'
	echo2 $msg
	_exit $msg
}

cmd=$1
shift

mkdir -p $tmp

# in theory we could just exec the $cmd
# in practice it would exec anything
# and we don't actually want to exec anything

switch ($cmd){
case 'get'
	get   $*
case 'tag'
	tag   $*
case 'untag'
	untag $*
case 'hash'
	hash $*
case *
	echo2 unknown command: $cmd
	usage
}

_exit
